name: test

on: [push, pull_request, workflow_dispatch]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11']

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install poetry
      run: curl -sSL "https://install.python-poetry.org" | python

    - name: Set up cache
      uses: actions/cache@v3
      with:
        path: .venv
        key: venv-${{ matrix.python-version }}-${{ hashFiles('poetry.lock') }}

    - name: Install dependencies
      run: |
        poetry config virtualenvs.in-project true
        poetry install

        poetry run pip install -U pip

    - name: Run tests
      run: |
        poetry run flake8 .
        poetry run mypy lambdas tests/**/*.py
        poetry run pytest lambdas tests
        poetry run doc8 -q docs
        poetry run poetry check
        poetry run pip check
        poetry run safety check --full-report
        # We do this to speed up the build:
        poetry run pytest typesafety -p no:cov -o addopts="" --mypy-ini-file=setup.cfg

    - name: Upload coverage to Codecov
      if: matrix.python-version == 3.8
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
